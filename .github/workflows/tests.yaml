name: CI

on:
  pull_request:
  push:
    branches:
      - main

# Cancel currently running job if a new one comes along for the same branch or tag.
# From https://stackoverflow.com/a/72408109.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  precommit:
    name: Pre-commit checks
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.1

  tests:
    name: Install and run tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      # TODO(eguiraud): bazel caching does not work (bazel always rebuilds everything) -- to be figured out
      #- name: Setup Bazel Cache
      #  uses: actions/cache/restore@v4
      #  id: restore-cache
      #  with:
      #    path: |
      #      ~/.cache/bazel
      #    key: |
      #      ${{ runner.os }}-bazel-${{ hashFiles('src/vmecpp/cpp/.bazelrc', 'src/vmecpp/cpp/WORKSPACE.bazel', 'src/vmecpp/cpp/MODULE.bazel') }}-${{ hashFiles('**/*.h', '**/*.cc') }}
      #    restore-keys: |
      #      ${{ runner.os }}-bazel-${{ hashFiles('src/vmecpp/cpp/.bazelrc', 'src/vmecpp/cpp/WORKSPACE.bazel', 'src/vmecpp/cpp/MODULE.bazel') }}
      #      ${{ runner.os }}-bazel-
      - name: Install package
        run: |
          # install VMEC++ deps as well as VMEC2000 deps (we need to import VMEC2000 in a test)
          sudo apt-get update && sudo apt-get install libnetcdf-dev liblapacke-dev libopenmpi-dev libnetcdff-dev libscalapack-openmpi-dev
          python -m pip install -vvv -e .[test]
          # needed for some VMEC++/VMEC2000 compatibility tests
          python -m pip install vmec@https://storage.googleapis.com/proxima-hosting/wheels/vmec-0.0.4-cp310-cp310-linux_x86_64.whl
      - name: Test package
        run: python -m pytest tests/
      # TODO(eguiraud): see above
      #- name: Save Bazel Cache (only in main)
      #  uses: actions/cache/save@v4
      #  # only save the cache if this branch is main and there was no entry with this exact key already
      #  if: ${{ github.ref_name == 'main' && steps.restore-cache.outputs.cache-hit != 'true' }}
      #  with:
      #    path: |
      #      ~/.cache/bazel
      #    # Create a new key whenever the Bazel configuration _or a C++ header or source file_ changes:
      #    # This updates the cache more frequently than as suggested at https://github.com/actions/cache/blob/main/examples.md#linux-2,
      #    # which should result in shorter build times for every CI run.
      #    key: |
      #      ${{ runner.os }}-bazel-${{ hashFiles('src/vmecpp/cpp/.bazelrc', 'src/vmecpp/cpp/WORKSPACE.bazel', 'src/vmecpp/cpp/MODULE.bazel') }}-${{ hashFiles('**/*.h', '**/*.cc') }}
