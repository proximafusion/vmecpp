[build-system]
requires = ["hatchling", "hatch-build-scripts"]
build-backend = "hatchling.build"

[project]
name = "vmecpp"
dynamic = ["version"]
description = "Proxima Fusion's reimplementation of the Variational Moments Equilibrium Code (VMEC), a free-boundary ideal-MHD equilibrium solver for stellarators and Tokamaks."
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Jonathan Schilling", email = "jons@proximafusion.com" },
  { name = "Enrico Guiraud", email = "eguiraud@proximafusion.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/proximafusion/vmecpp#readme"
Issues = "https://github.com/proximafusion/vmecpp/issues"
Source = "https://github.com/proximafusion/vmecpp"

[tool.hatch.version]
path = "src/vmecpp/__about__.py"

# NOTE(eguiraud): this produces two copies of the extension module,
# but I could not convince hatch to do otherwise. We only copy one
# of the two into the wheel.
[[tool.hatch.build.hooks.build-scripts.scripts]]
work_dir = "src/vmecpp/cpp/"
out_dir = "src/vmecpp/cpp/bazel_artifacts/"
commands = [
  # the build is CPU-intensive, so we limit the amount of jobs to less
  # than the number of CPUs in order to not completely hog the machine 
  "bazel build --jobs='HOST_CPUS*.75' //...",
  "cp -f bazel-bin/vmecpp/vmec/pybind11/_vmecpp.so _vmecpp.so",
]
artifacts = [
    "_vmecpp.so",
]

[tool.hatch.build.targets.wheel]
artifacts = [
  "src/vmecpp/cpp/_vmecpp.so",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/vmecpp tests}"

[tool.coverage.run]
source_pkgs = ["vmecpp", "tests"]
branch = true
parallel = true
omit = [
  "src/vmecpp/__about__.py",
]

[tool.coverage.paths]
vmecpp = ["src/vmecpp", "*/vmecpp/src/vmecpp"]
tests = ["tests", "*/vmecpp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
